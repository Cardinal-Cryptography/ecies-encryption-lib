name: Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major, or specific version like 1.0.0)'
        required: true
        default: 'patch'
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build the library
        run: pnpm --filter ./ts/lib... build

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update version
        working-directory: ./ts/lib
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi
          echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Commit version bump
        run: |
          git add ts/lib/package.json
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
          git tag "v${{ env.NEW_VERSION }}"
          git push origin main
          git push origin "v${{ env.NEW_VERSION }}"

      - name: Publish to NPM
        working-directory: ./ts/lib
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            ## Changes
            Published version ${{ env.NEW_VERSION }} to NPM.
            
            Install with:
            ```bash
            npm install @cardinal-cryptography/ecies-encryption-lib@${{ env.NEW_VERSION }}
            ```
          draft: false
          prerelease: false
